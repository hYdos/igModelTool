# This workflow will build a .NET project and publish it as a release.
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Archive build artifacts
      if: success()
      run: zip -r igModelTool.zip . -i artifacts/*

    - name: Publish build artifacts
      if: success()
      run: dotnet publish -c Release -o ./artifacts
      
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Check for Existing Release
      id: check_release
      uses: actions/github-script@v6
      with:
        script: |
          const tag = 'v1.0.0'; // Replace with your tag/version
          try {
            const release = await github.rest.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag
            });
            core.setOutput('release_exists', 'true');
            core.setOutput('release_id', release.data.id);
          } catch (error) {
            if (error.status === 404) {
              core.setOutput('release_exists', 'false');
            } else {
              throw error;
            }
          }

    - name: Delete Existing Release
      if: steps.check_release.outputs.release_exists == 'true'
      uses: actions/github-script@v6
      with:
        script: |
          const release_id = ${{ steps.check_release.outputs.release_id }};
          await github.rest.repos.deleteRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id
          });

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: 'v1.0.0' # Replace with your tag/version
        release_name: 'Release v1.0.0' # Replace with your release name
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./igModelTool.zip
        asset_name: igModelTool.zip
        asset_content_type: application/zip
